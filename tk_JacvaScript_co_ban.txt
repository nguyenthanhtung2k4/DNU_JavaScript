Kiểm tra kiểu dữ liệu:
          typeof(tung)
Kiểm tra các dữ liệu  có đúng hay không
          Mảng      : tung.isArray()
          Object    : tung.isObject()
          Nan       : tung.isNan()
##############################################################################################################################################################
Các hàm  về built-in  
          1. Alert       : in ra  một bảng kết quả
          2. Confirm     : xác nhận độ tuổi     
          3. Consele     :in ra kết quả
                    Consele.log  :thường được sử dụng nhiều : nó in  ra kết quả  bình thường
                    Consele.warn : hàm này cũng để in  ra nhưng nó  sẽ cảnh báo
                    Consele.error: hàm này cũng để in ra nhưng nó  in  ra kết  quả lỗi
          4. Prompt      :xác nhận  độ tuổi và nhập  dòng input
          5. setTimeout  : thời gian xác nhận  để in ra kết quả in ra  một  lần
          6. setInterval : thời gian  xác nhận  để in ra và in ra nhiều lần  theo chu kỳ  thời gian đã cho
##############################################################################################################################################################

PHÉP TOÁN TỬ:
     +              Phép toán cộng
     -              Phép toán trừ 
     *              Phép toán nhân
     **             Phép toán Nhân mũ
     /              Phép  toán chia
     %              Phép  toán lấy số  dư
     >              Phép  toán so sánh lớn hơn
     =              Phép  toán so sánh bằng
     <              Phép  toán so sánh nhỏ hơn
     !=             Phép  toán so sánh không bằng
     >=             Phép  toán so sánh lớn hơn hoặc bằng
     >==            Phép  toán so sánh lớn hơn hoặc bằng so  sánh cả kiểu dữ liệu
     <=             Phép  toán so sánh nhỏ hơn
     <==            Phép  toán so sánh nhỏ hơn hoặc bằng so  sánh cả kiểu dữ liệu
     ==             Phép  toán so sánh bằng
     ===            Phép  toán so sánh bằng hoặc bằng so  sánh cả kiểu dữ liệu

##############################################################################################################################################################
SỬ LÝ CHUỖI ( STRING)

          ESC6: Khi viết nhiều thứ khi  in  ra ta cũng có thể in ra như sau:
               var tung= 'thanhtung';
               var ten='ten';
               Consele.log(`toi la  tung ${ten} ${tung}`)
     * lưu ý:  khi  chèn các biến vào sử dụng  $ thì phải dùng dấu mũ nghiên ` 
          Tìm chuỗi index: 
               vd:
                    var  tung="tung dang hoc javascript"
                    console.log(tung.index0f('tung'))
               ==>  tung.index({tim_chuoi,so_thu_tu})
          Tìm chuỗi bằng search: 
               vd:
                    var str ="Hello world!";
                    Console.log(str.search("world"));
               ==> tung.search({tim_chuoi})
          ==>  Tìm kiếm bằng search KHÔNG HỖ TRỢ  TÌM  KIẾM THEO  KÍ TỰ
                        index  HỖ  TRỢ TÌM KIẾM BẰNG KÍ  TỰ  ĐƯỢC.
          
          Cắt chuỗi: string.slice
               vd:
                    var str ="Hello world!";
                    console.log(str.slice(0,5));
                    -->  Kết quả trả về là: world!

          Chèn chuỗi: string
               vd:
                    var str ="Hello  tung world! tung";
                    console.log(str.replace({chu_muon_thay},{chu_thay_the}))
          * Lưu ý :Khi  ta muốn  thay  thế  ta  có  thê thay  thế bằng cách thay  một chữ  hoặc  nhiều  chữ.
               -Thay  thế  một  chữ  ta có thể thay như  sau: {chu_muon_thay},{chu_thay_the}
               -Thay  thế  một  chữ  tất  cả giống nhau ta có thể thay  như  sau: /{chu_muon_the}/g ,{chu_muon_the}
          Chữ  in hoa ,  in thường:
               toUpperCase() :  Chữ in hoa
               toLowerCase() :  Chữ in thường
          Loại bỏ khoảng trắng: trim
               vd: 
                    var str ="  Hello world!   ";
                    console.str.trim()
          Tạo  ra mảng  slpit():
               vd:
                    var str = "tung,thanh,nguye";
                    console.log(str.split(','));
                ==>kết quả trả về:[tung, thanh, nguye]

          Thay  thế  vị trí: charAt hoặc  []
               vd:
                    var str ="Hello world!";
                    console.log(str.charAt(1));
                    ==> kết quả trả về: e
               hoặc :
                    var str ="Hello world!";
                    console.log(str[1]);
                    ==> kết quả trả về: e

##############################################################################################################################################################
SỬ LÝ CHUỐI(STRING):
          Chuyển số thành  chuỗi: toString
               vd: 
                    var so =10;
                    console.log(so.toString());

                    ==> kết quả trả về:  10
                    Nhưng nó là kiểu dữ liệu  string k còn là kiểu number nữa!
          Làm tròn ,  lấy  số thập  phân: fixed
               var so=10.3345634643;
               console.log(so.toFixed(2)) ;
               ==>kết quả trả về: 10.33
##############################################################################################################################################################
LÀM VIỆC VỚI MẢNG:

          Cách khởi tạo:
                         vd:
                              var array=['tung',thanh','nguyen'];
          Truy xuất Mảng:
                         vd:
                              var array=['tung',thanh','nguyen'];
                              console.log(array[0],array.length)

                              ==>kết quả trả về: tung 3
          Các kiểu dữ liệu  trong Mảng:
               length    : đếm các phần tử trong mảng
               toString  : Chuyển sang kiểu dữ liệu  STRING
               join      : Lấy tất cả các mảng chuyển thành string ngoài ra ta cũng có thể ngăn cách các phần tử.
                         vd:
                                   var array=['tung',thanh','nguyen'];
                                   console.log(array.join('-'));
                                   ===>>kết quả trả về: tung-thanh-nguyen

               shift()   : Xóa phần tử ĐẦU MẢNG và in phần tử bị  xóa
               pop()     : Xóa phần tử CUỐI MẢNG và in phần tử bị  xóa
               push({pt_muon_them},{})      : Thêm phần tử mới vào trong  mảng Ở CUỐI MẢNG
               unshift({pt_muon_them},{})   : Thêm phần tử mới vào trong  mảng Ở ĐẦU MẢNG
                         vd:
                                   var array=['tung',thanh','nguyen'];
                                   array.push('dao');
                                   console.log(array);
                                   ==>kết quả trả về: ['tung', 'thanh', 'nguyen', 'dao']
                         vd:  unshift làm tương tự như  vậy.
               splice({vitri_con_tro},{so_lg_xoa_pt},{string_them_phan_tu}) 
                         ==> Nó sẽ giúp bạn  đặt vị trí con trỏ và xóa đi  bất  kì pt nào,  cx có them  phân tu  moi  vao  mang do.
                         vd:
                              var tung=['thanh','tung','nguyen']; 
                              console.log(tung.splice(1,1,'cuacace'));
                              --> Kết quả: ['tung','cuacace','nguyen]
               slice({vitri_dau},{vitri_cuoi}) : Nó sẽ cắt từ phần tử này đến pt kia
                         vd:
                              var tung=['tung','thanh','nguyen']; 
                              console.log(tung.slice(1,2));
                              ==>Kết quả: ['thanh']

               concat    :  Kết hợp 2  mảng lại vs nhau thành  1 mảng
                         vd: 
                         var tung=['tung','thanh','nguyen'];
                         var tung2=['tung','thanh','nguyen'];
                         console.log(tung.concat(tung2))
                         ==>Kết quả: ['tung','thanh','nguyen','tung','thanh','nguyen']
##############################################################################################################################################################
HÀM JAVASCRIPT: function  giông như def(python)  hay void(c++)
     ------------------------------------------------
          return : {giá_trị} --> Nó sẽ trả về bất kì kiểu dữ liệu  gì nó sẽ phụ thuôcj  vào ta định  dạng nó.
          arguments : cho  phép  bạn  sử dụng  chuyền dữ liệu  vào function và trả về dạng  arr 

     -------------------ĐỊNH  DẠNG BÊN DƯỚI-----------------------------
               function {ten_bien}() {
                    /// code cua ban
               }
     -------------------VD-----------------------------
          VD:
               function Arguments() {
                    console.log(arguments)
               }
               /// chay function
               function Arguments('tung','thanh','nguyen');
          vd khác:
               function tesst() {
                    var so='';
                    for (var tung of  arguments) {
                    so +=`${tung} : `
                    }
                    console.log(so);
               }
               tesst('a','b',123,true,'c')
##############################################################################################################################################################
polyfill:  cách nó kiểu tra xem  các trình duyệt có hỗ trợ chạy  đc code không
        Link  tham khảo: https://youtu.be/zFO-sSfReFs?si=-GoHzrA7LeHj16iO
        ==>  xem để hiểu dõ hơn về Polyfill  trong Js.
##############################################################################################################################################################
Làm việc  với object: giống như json(python) 
          - Tạo  ra một object:
                         vd:
                              var object={
                                   name:'tung',
                                   'full-name':'nguyen thanh tung',
                              }
                              // Truy cập vào property của Object
                              console.log(object.name)
                              console.log(object['full-name'])

                                             Kết_quả_trả_về-->tung
                                             Kết_quả_trả_về-->nguyen thanh tung
          - Thêm Property vào Object:
                            vd:
                                object.age=25;
                                console.log(object.age)

                                        Kết_quả_trả_về-->==>25
          - Xóa Property của Object:
                             delete object.age;
                             console.log(object.age)
                                        Kết_quả_trả_về--->undefined
          - Sửa Value của Property:
                               object.name='thanh';
                               console.log(object.name)
                                        Kết_quả_trả_về-->==>'thanh'
          - Tạo mảng trong Object:
                           Object.defineProperty(object,"arr",{value:[1,2,3]})
                           console.log(object.arr) 
                                        Kết_quả_trả_về-->[1,2,3]
          - Tạo function  trong Object:
                          var tung{
                              name:'tung',
                              age: 20,
                              t: function{
                                   'toi la  nguyen'+this.name+'toi nam nay '+this.age;
                              }   
                          }
                    *Lưu ý:  Khi ta dùng Function  thì ta lên sử dụng  THIS.{GIÁ_TRỊ_oBJECT}  TRONG FUNCTION()
                             Thay  vì dùng tung.name trong function thì ta nên dùng THIS